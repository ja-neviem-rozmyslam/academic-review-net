networks:
  sw-ing:
    driver: bridge

services:
  # Backend web - Spring Boot
  backend:
    build:
      context: .
      dockerfile: config/spring/Dockerfile
    image: arn-backend
    container_name: ARN-Backend
    depends_on:
      - mysql
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 3306
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
    networks:
      - sw-ing
    ports:
      - 8080:8080

  # Angular Frontend
  frontend:
    build:
      context: .
      dockerfile: config/angular/Dockerfile
    image: arn-frontend
    container_name: ARN-Frontend
    networks:
      - sw-ing
    ports:
      - 4200:80
    depends_on:
      - backend

  #MySQL
  mysql:
    build:
      context: .
      dockerfile: ./config/mysql/Dockerfile
    container_name: mysql-container
    ports:
      - "${DB_PORT}:3306"
    expose:
      - "3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dev_swing_db:/var/lib/mysql
      - ./config/mysql/db.sql:/docker-entrypoint-initdb.d/db.sql
      - ./config/mysql/inserts.sql:/docker-entrypoint-initdb.d/inserts.sql
    networks:
      - sw-ing

volumes:
  dev_swing_db: